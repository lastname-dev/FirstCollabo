{"ast":null,"code":"import _toConsumableArray from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{Table}from\"react-bootstrap\";import{useParams}from\"react-router\";import Navi from\"../components/Navi\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EveryBoardPage(){var _useParams=useParams(),name=_useParams.name;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),index=_useState2[0],setIndex=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),firstLoading=_useState6[0],setFirstLoading=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),posts=_useState8[0],setPosts=_useState8[1];var numOfPosts=20;var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),scrollTop=_useState10[0],setScrollTop=_useState10[1];var universityname=sessionStorage.getItem(\"universityname\");var onScroll=function onScroll(){console.log(\"scrolling\");setScrollTop(document.documentElement.scrollTop);};var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var futurePosts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/getposts/\".concat(universityname,\"/\").concat(name,\"/\").concat(index,\"/\").concat(numOfPosts));case 2:futurePosts=_context.sent.data;setMaxLength(maxLengthTemp);setPosts(function(currentPosts){return[].concat(_toConsumableArray(currentPosts),_toConsumableArray(futurePosts));});setIndex(function(current){return current+1;});setLoading(false);setFirstLoading(false);case 8:case\"end\":return _context.stop();}}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();useEffect(function(){window.removeEventListener(\"scroll\",onScroll);window.addEventListener(\"scroll\",onScroll,{passive:true});if(window.innerHeight+document.documentElement.scrollTop===document.scrollingElement.scrollHeight){console.log(\"update\");setLoading(true);getPosts();}return function(){return window.removeEventListener(\"scroll\",onScroll);};},[scrollTop]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navi,{}),/*#__PURE__*/_jsx(\"div\",{style:{float:\"right\"},children:/*#__PURE__*/_jsx(Button,{href:\"/newpost\",children:\"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"})}),firstLoading?/*#__PURE__*/_jsx(\"div\",{children:\"loading...\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsx(\"tbody\",{children:posts.map(function(post){return/*#__PURE__*/_jsx(\"tr\",{id:post.id,onClick:function onClick(){document.location.href=\"/post/\".concat(post.id);},style:{height:\"50px\"},children:/*#__PURE__*/_jsx(\"td\",{children:post.title})});})})}),loading?/*#__PURE__*/_jsx(\"div\",{children:\"loading\"}):null]})]});}export default EveryBoardPage;","map":{"version":3,"sources":["/Users/parkchan/Desktop/coding/collab/firstcollabo/src/routes/EveryBoardPage.js"],"names":["axios","useEffect","useState","Table","useParams","Navi","EveryBoardPage","name","index","setIndex","loading","setLoading","firstLoading","setFirstLoading","posts","setPosts","numOfPosts","scrollTop","setScrollTop","universityname","sessionStorage","getItem","onScroll","console","log","document","documentElement","getPosts","get","futurePosts","data","setMaxLength","maxLengthTemp","currentPosts","current","window","removeEventListener","addEventListener","passive","innerHeight","scrollingElement","scrollHeight","float","map","post","id","location","href","height","title"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\nimport Navi from \"../components/Navi\";\n\nfunction EveryBoardPage() {\n  const { name } = useParams();\n  const [index, setIndex] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [firstLoading, setFirstLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const numOfPosts = 20;\n  const [scrollTop, setScrollTop] = useState(0);\n  const universityname = sessionStorage.getItem(\"universityname\");\n\n  const onScroll = () => {\n    console.log(\"scrolling\");\n    setScrollTop(document.documentElement.scrollTop);\n  };\n\n  const getPosts = async () => {\n    const futurePosts = (\n      await axios.get(\n        `/getposts/${universityname}/${name}/${index}/${numOfPosts}`\n      )\n    ).data;\n    setMaxLength(maxLengthTemp);\n    setPosts((currentPosts) => [...currentPosts, ...futurePosts]);\n    setIndex((current) => current + 1);\n    setLoading(false);\n    setFirstLoading(false);\n  };\n  useEffect(() => {\n    window.removeEventListener(\"scroll\", onScroll);\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.scrollingElement.scrollHeight\n    ) {\n      console.log(\"update\");\n      setLoading(true);\n      getPosts();\n    }\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [scrollTop]);\n  return (\n    <div>\n      <Navi />\n      <div style={{ float: \"right\" }}>\n        <Button href=\"/newpost\">게시글 작성</Button>\n      </div>\n      {firstLoading ? (\n        <div>loading...</div>\n      ) : (\n        <div>\n          <Table>\n            <tbody>\n              {posts.map((post) => (\n                <tr\n                  id={post.id}\n                  onClick={() => {\n                    document.location.href = `/post/${post.id}`;\n                  }}\n                  style={{ height: \"50px\" }}\n                >\n                  <td>{post.title}</td>\n                  {/* <td>{post.username}</td> */}\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          {loading ? <div>loading</div> : null}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EveryBoardPage;\n"]},"metadata":{},"sourceType":"module"}