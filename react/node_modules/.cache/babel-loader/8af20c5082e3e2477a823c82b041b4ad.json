{"ast":null,"code":"import _asyncToGenerator from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/parkchan/Desktop/coding/collab/firstcollabo/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";import{useEffect,useState}from\"react\";import Navi from\"../components/Navi\";import{Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EveryBoardList(){var username=sessionStorage.getItem(\"username\");var universityname=sessionStorage.getItem(\"universityname\");if(username===null||universityname===null){alert(\"로그인 해주세요\");document.location.href=\"/\";}var _useState=useState([]),_useState2=_slicedToArray(_useState,2),boards=_useState2[0],setBoards=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getBoards=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/everyboards/\".concat(universityname));case 2:response=_context.sent.data;setBoards(response);setLoading(false);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getBoards(){return _ref.apply(this,arguments);};}();var buttonListStyle={width:\"400px\",border:\"1px solid\",borderColor:\"rgba(240, 240, 240)\",borderRadius:\"30px\",padding:\"5px\",margin:\"30px 0px 30px 0px\"};var buttonStyle={margin:\"5px 20% 5px 20%\"};useEffect(function(){return getBoards();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navi,{}),loading?null:/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"calc(50% - 200px)\",marginRight:\"calc(50% - 200px)\"},children:[username!==null?/*#__PURE__*/_jsxs(\"div\",{style:buttonListStyle,children:[/*#__PURE__*/_jsx(Button,{variant:\"light\",style:buttonStyle,children:\"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"}),/*#__PURE__*/_jsx(Button,{variant:\"light\",style:buttonStyle,children:\"\\uB313\\uAE00 \\uB2E8 \\uAE00\"}),/*#__PURE__*/_jsx(Button,{variant:\"light\",style:buttonStyle,children:\"\\uC2A4\\uD06C\\uB7A9\"})]}):null,/*#__PURE__*/_jsx(\"div\",{style:buttonListStyle,children:boards.map(function(board){return/*#__PURE__*/_jsx(Button,{href:\"/everyboard/\".concat(board.ename),variant:\"light\",style:buttonStyle,children:board.kname});})})]})]});}export default EveryBoardList;","map":{"version":3,"sources":["/Users/parkchan/Desktop/coding/collab/firstcollabo/src/routes/EveryBoardList.js"],"names":["axios","useEffect","useState","Navi","Button","EveryBoardList","username","sessionStorage","getItem","universityname","alert","document","location","href","boards","setBoards","loading","setLoading","getBoards","get","response","data","buttonListStyle","width","border","borderColor","borderRadius","padding","margin","buttonStyle","marginLeft","marginRight","map","board","ename","kname"],"mappings":"2ZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,MAAT,KAAuB,iBAAvB,C,wFAEA,QAASC,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,QAAQ,CAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAjB,CACA,GAAMC,CAAAA,cAAc,CAAGF,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAvB,CACA,GAAIF,QAAQ,GAAK,IAAb,EAAqBG,cAAc,GAAK,IAA5C,CAAkD,CAChDC,KAAK,CAAC,UAAD,CAAL,CACAC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAyB,GAAzB,CACD,CACD,cAA4BX,QAAQ,CAAC,EAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eACA,eAA8Bb,QAAQ,CAAC,IAAD,CAAtC,yCAAOc,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,SAAS,0FAAG,sKACQlB,CAAAA,KAAK,CAACmB,GAAN,wBAA0BV,cAA1B,EADR,QACVW,QADU,eACqDC,IADrD,CAEhBN,SAAS,CAACK,QAAD,CAAT,CACAH,UAAU,CAAC,KAAD,CAAV,CAHgB,sDAAH,kBAATC,CAAAA,SAAS,0CAAf,CAKA,GAAMI,CAAAA,eAAe,CAAG,CACtBC,KAAK,CAAE,OADe,CAEtBC,MAAM,CAAE,WAFc,CAGtBC,WAAW,CAAE,qBAHS,CAItBC,YAAY,CAAE,MAJQ,CAKtBC,OAAO,CAAE,KALa,CAMtBC,MAAM,CAAE,mBANc,CAAxB,CAQA,GAAMC,CAAAA,WAAW,CAAG,CAAED,MAAM,CAAE,iBAAV,CAApB,CACA3B,SAAS,CAAC,iBAAMiB,CAAAA,SAAS,EAAf,EAAD,CAAoB,EAApB,CAAT,CACA,mBACE,oCACE,KAAC,IAAD,IADF,CAEGF,OAAO,CAAG,IAAH,cACN,aACE,KAAK,CAAE,CACLc,UAAU,CAAE,mBADP,CAELC,WAAW,CAAE,mBAFR,CADT,WAMGzB,QAAQ,GAAK,IAAb,cACC,aAAK,KAAK,CAAEgB,eAAZ,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,KAAK,CAAEO,WAA/B,wCADF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,KAAK,CAAEA,WAA/B,wCAJF,cAOE,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,KAAK,CAAEA,WAA/B,gCAPF,GADD,CAYG,IAlBN,cAmBE,YAAK,KAAK,CAAEP,eAAZ,UACGR,MAAM,CAACkB,GAAP,CAAW,SAACC,KAAD,qBACV,KAAC,MAAD,EACE,IAAI,uBAAiBA,KAAK,CAACC,KAAvB,CADN,CAEE,OAAO,CAAC,OAFV,CAGE,KAAK,CAAEL,WAHT,UAKGI,KAAK,CAACE,KALT,EADU,EAAX,CADH,EAnBF,GAHJ,GADF,CAsCD,CAED,cAAe9B,CAAAA,cAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Navi from \"../components/Navi\";\nimport { Button } from \"react-bootstrap\";\n\nfunction EveryBoardList() {\n  const username = sessionStorage.getItem(\"username\");\n  const universityname = sessionStorage.getItem(\"universityname\");\n  if (username === null || universityname === null) {\n    alert(\"로그인 해주세요\");\n    document.location.href = \"/\";\n  }\n  const [boards, setBoards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getBoards = async () => {\n    const response = (await axios.get(`/everyboards/${universityname}`)).data;\n    setBoards(response);\n    setLoading(false);\n  };\n  const buttonListStyle = {\n    width: \"400px\",\n    border: \"1px solid\",\n    borderColor: \"rgba(240, 240, 240)\",\n    borderRadius: \"30px\",\n    padding: \"5px\",\n    margin: \"30px 0px 30px 0px\",\n  };\n  const buttonStyle = { margin: \"5px 20% 5px 20%\" };\n  useEffect(() => getBoards(), []);\n  return (\n    <div>\n      <Navi />\n      {loading ? null : (\n        <div\n          style={{\n            marginLeft: \"calc(50% - 200px)\",\n            marginRight: \"calc(50% - 200px)\",\n          }}\n        >\n          {username !== null ? (\n            <div style={buttonListStyle}>\n              <Button variant=\"light\" style={buttonStyle}>\n                내가 쓴 글\n              </Button>\n              <Button variant=\"light\" style={buttonStyle}>\n                댓글 단 글\n              </Button>\n              <Button variant=\"light\" style={buttonStyle}>\n                스크랩\n              </Button>\n            </div>\n          ) : null}\n          <div style={buttonListStyle}>\n            {boards.map((board) => (\n              <Button\n                href={`/everyboard/${board.ename}`}\n                variant=\"light\"\n                style={buttonStyle}\n              >\n                {board.kname}\n              </Button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EveryBoardList;\n"]},"metadata":{},"sourceType":"module"}